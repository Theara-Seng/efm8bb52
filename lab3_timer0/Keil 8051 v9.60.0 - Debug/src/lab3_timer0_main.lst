C51 COMPILER V9.60.0.0   LAB3_TIMER0_MAIN                                                  05/16/2023 16:46:31 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LAB3_TIMER0_MAIN
OBJECT MODULE PLACED IN .\src\lab3_timer0_main.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\User\Si
                    -mplicityStudio\v5_workspace\lab3_timer0\src\lab3_timer0_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) 
                    -FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\User\SimplicityStudio\v5_wo
                    -rkspace\lab3_timer0\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/shared/si8051Base;C:/Silic
                    -onLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/EFM8BB52/inc) PRINT(.\src\lab3_timer0_main.lst) COND PAGEW
                    -IDTH(120) PAGELENGTH(65) OBJECT(.\src\lab3_timer0_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/lab3_timer0_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8BB52_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          // $[Generated Includes]
  15          // [Generated Includes]$
  16          sbit led = P1^3;
  17          uint8_t low_bit;
  18          uint8_t high_bit;
  19          //-----------------------------------------------------------------------------
  20          // SiLabs_Startup() Routine
  21          // ----------------------------------------------------------------------------
  22          // This function is called immediately after reset, before the initialization
  23          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  24          // useful place to disable the watchdog timer, which is enable by default
  25          // and may trigger before main() in some instances.
  26          //-----------------------------------------------------------------------------
  27          void
  28          SiLabs_Startup (void)
  29          {
  30   1        // $[SiLabs Startup]
  31   1        // [SiLabs Startup]$
  32   1      }
  33          void
  34          disable_watchdog ()
  35          {
  36   1        WDTCN = 0xDE;
  37   1        WDTCN = 0xAD;
  38   1      }
  39          void
  40          enable_crossbar ()
  41          {
  42   1        XBR2 |= XBR2_XBARE__ENABLED;
  43   1        P1MDIN |= P1MDIN_B3__DIGITAL;
  44   1        P1MDOUT |= P1MDOUT_B3__PUSH_PULL;
  45   1      }
  46          
  47          
  48          
  49          // Timer 0 Mode 0 (13 Bit counter/Timer)
  50          
  51          void
C51 COMPILER V9.60.0.0   LAB3_TIMER0_MAIN                                                  05/16/2023 16:46:31 PAGE 2   

  52          timer0_mode0(){
  53   1        // Generate a 10 millis second
  54   1        CKCON0 = CKCON0_T0M__PRESCALE | CKCON0_SCA__SYSCLK_DIV_48;  // clock control = 765625/48= 15950
  55   1        TCON_TR0 = 1; // start the timer
  56   1        TMOD = TMOD_CT0__TIMER | TMOD_T0M__MODE0 ; // select mode 0 (13 bit timer)
  57   1      
  58   1        // time_delay = (Fckcon/(2^13 - TH0:TL0) => TH0:TL0 = 8192 - (Fckcon/time_delay) = 8192- (15950/100)= 80
             -32= 1F60
  59   1      
  60   1      
  61   1      
  62   1        // since the data is 13 bit we need to shift left by 3 -> 1F60<<FB00 = EC10, TH0 = 0xFB and TL0 = 00>>3;
  63   1        TL0 = 0x00>>3;
  64   1        TH0 = 0xFB;
  65   1      
  66   1        while (TCON_TF0 == 0);
  67   1        TCON_TR0 = 0;
  68   1        TCON_TF0 = 0;
  69   1      }
  70          
  71          // Timer 0 Mode 1 (16 bit counter/Timer)
  72          void
  73          timer0_mode1 ()
  74          {
  75   1        // Generate a 1 second delay.
  76   1        CKCON0 = CKCON0_T0M__PRESCALE | CKCON0_SCA__SYSCLK_DIV_48; //clock control = 765625/48 = 15,950
  77   1        TMOD = TMOD_CT0__TIMER | TMOD_T0M__MODE1;  // Mode 1 timer 0 (16 Bit)
  78   1      
  79   1        // time = (Fckcon/(65536-TH0:TL0))=> TH0:TL0 = 65536-Fckcon = 65536 - 15950= 49586 -> TH0=0xC1 and TL0=0
             -xB2
  80   1      
  81   1        TL0 = 0xB2;
  82   1        TH0 = 0xC1;
  83   1        TCON_TR0 = 1;
  84   1        while (TCON_TF0 == 0);
  85   1        TCON_TR0 = 0;
  86   1        TCON_TF0 = 0;
  87   1      
  88   1      }
  89          //-----------------------------------------------------------------------------
  90          // main() Routine
  91          // ----------------------------------------------------------------------------
  92          int
  93          main (void)
  94          {
  95   1        // Call hardware initialization routine
  96   1        enter_DefaultMode_from_RESET ();
  97   1        disable_watchdog();
  98   1        enable_crossbar ();
  99   1      
 100   1        CLKSEL = CLKSEL_CLKSL__HFOSC0_clk24p5 | CLKSEL_CLKDIV__SYSCLK_DIV_32 ; // clksel = 24.5MHz/32 =765625
 101   1      
 102   1        while (1)
 103   1          {
 104   2            led = 1;
 105   2            timer0_mode0 ();
 106   2            led = 0;
 107   2            timer0_mode1 ();
 108   2      // $[Generated Run-time code]
 109   2      // [Generated Run-time code]$
 110   2          }
 111   1      }

C51 COMPILER V9.60.0.0   LAB3_TIMER0_MAIN                                                  05/16/2023 16:46:31 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     85    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
