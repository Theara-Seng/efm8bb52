C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/15/2023 07:18:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src\InitDevice.OBJ
COMPILER INVOKED BY: C:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe C:\Users\User\Si
                    -mplicityStudio\v5_workspace\hello_8051\src\InitDevice.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFU
                    -ZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(C:\Users\User\SimplicityStudio\v5_workspace
                    -\hello_8051\inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.5//Device/shared/si8051Base;C:/SiliconLabs/S
                    -implicityStudio/v5/developer/sdks/8051/v4.2.5//Device/EFM8BB52/inc;C:/SiliconLabs/SimplicityStudio/v5/developer/sdks/805
                    -1/v4.2.5//kits/common/drivers/efm8_retargetserial) PRINT(.\src\InitDevice.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT
                    -(.\src\InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8BB52_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          // USER PROTOTYPES
  14          // USER FUNCTIONS
  15          
  16          // $[Library Includes]
  17          // [Library Includes]$
  18          
  19          //==============================================================================
  20          // enter_DefaultMode_from_RESET
  21          //==============================================================================
  22          extern void
  23          enter_DefaultMode_from_RESET (void)
  24          {
  25   1        // $[Config Calls]
  26   1        // Save the SFRPAGE
  27   1        uint8_t SFRPAGE_save = SFRPAGE;
  28   1        WDT_0_enter_DefaultMode_from_RESET ();
  29   1        PORTS_0_enter_DefaultMode_from_RESET ();
  30   1        PBCFG_0_enter_DefaultMode_from_RESET ();
  31   1        CLOCK_0_enter_DefaultMode_from_RESET ();
  32   1        TIMER01_0_enter_DefaultMode_from_RESET ();
  33   1        TIMER_SETUP_0_enter_DefaultMode_from_RESET ();
  34   1        UART_0_enter_DefaultMode_from_RESET ();
  35   1        // Restore the SFRPAGE
  36   1        SFRPAGE = SFRPAGE_save;
  37   1        // [Config Calls]$
  38   1      
  39   1      }
  40          
  41          extern void
  42          WDT_0_enter_DefaultMode_from_RESET (void)
  43          {
  44   1        // $[Watchdog Timer Init Variable Declarations]
  45   1        uint32_t i;
  46   1        bool ea;
  47   1        // [Watchdog Timer Init Variable Declarations]$
  48   1      
  49   1        // $[WDTCN - Watchdog Timer Control]
  50   1        SFRPAGE = 0x00;
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/15/2023 07:18:20 PAGE 2   

  51   1      
  52   1        // Feed WDT timer before disabling (Erratum WDT_E102)
  53   1        WDTCN = 0xA5;
  54   1      
  55   1        // Add 2 LFO cycle delay before disabling WDT (Erratum WDT_E102)
  56   1        for (i = 0; i < (2 * 3062500UL) / (80000 * 3); i++)
  57   1          {
  58   2            NOP ();
  59   2          }
  60   1      
  61   1        // Disable WDT
  62   1        ea = IE_EA;
  63   1        IE_EA = 0;
  64   1        WDTCN = 0xDE;
  65   1        WDTCN = 0xAD;
  66   1        IE_EA = ea;
  67   1      
  68   1        // [WDTCN - Watchdog Timer Control]$
  69   1      
  70   1      }
  71          
  72          extern void
  73          PORTS_0_enter_DefaultMode_from_RESET (void)
  74          {
  75   1        // $[P0 - Port 0 Pin Latch]
  76   1        // [P0 - Port 0 Pin Latch]$
  77   1      
  78   1        // $[P0MDOUT - Port 0 Output Mode]
  79   1        /***********************************************************************
  80   1         - P0.0 output is open-drain
  81   1         - P0.1 output is open-drain
  82   1         - P0.2 output is open-drain
  83   1         - P0.3 output is open-drain
  84   1         - P0.4 output is push-pull
  85   1         - P0.5 output is open-drain
  86   1         - P0.6 output is open-drain
  87   1         - P0.7 output is open-drain
  88   1         ***********************************************************************/
  89   1        P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
  90   1            | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN | P0MDOUT_B4__PUSH_PULL
  91   1            | P0MDOUT_B5__OPEN_DRAIN | P0MDOUT_B6__OPEN_DRAIN
  92   1            | P0MDOUT_B7__OPEN_DRAIN;
  93   1        // [P0MDOUT - Port 0 Output Mode]$
  94   1      
  95   1        // $[P0MDIN - Port 0 Input Mode]
  96   1        /***********************************************************************
  97   1         - P0.0 pin is configured for analog mode
  98   1         - P0.1 pin is configured for analog mode
  99   1         - P0.2 pin is configured for analog mode
 100   1         - P0.3 pin is configured for analog mode
 101   1         - P0.4 pin is configured for digital mode
 102   1         - P0.5 pin is configured for digital mode
 103   1         - P0.6 pin is configured for analog mode
 104   1         - P0.7 pin is configured for analog mode
 105   1         ***********************************************************************/
 106   1        P0MDIN = P0MDIN_B0__ANALOG | P0MDIN_B1__ANALOG | P0MDIN_B2__ANALOG
 107   1            | P0MDIN_B3__ANALOG | P0MDIN_B4__DIGITAL | P0MDIN_B5__DIGITAL
 108   1            | P0MDIN_B6__ANALOG | P0MDIN_B7__ANALOG;
 109   1        // [P0MDIN - Port 0 Input Mode]$
 110   1      
 111   1        // $[P0SKIP - Port 0 Skip]
 112   1        // [P0SKIP - Port 0 Skip]$
 113   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/15/2023 07:18:20 PAGE 3   

 114   1        // $[P0MASK - Port 0 Mask]
 115   1        // [P0MASK - Port 0 Mask]$
 116   1      
 117   1        // $[P0MAT - Port 0 Match]
 118   1        // [P0MAT - Port 0 Match]$
 119   1      
 120   1      }
 121          
 122          extern void
 123          PBCFG_0_enter_DefaultMode_from_RESET (void)
 124          {
 125   1        // $[XBR2 - Port I/O Crossbar 2]
 126   1        /***********************************************************************
 127   1         - Weak Pullups enabled 
 128   1         - Crossbar enabled
 129   1         - PWM single ended output for all enabled channels
 130   1         - UART1 I/O unavailable at Port pin
 131   1         - UART1 RTS1 unavailable at Port pin
 132   1         - UART1 CTS1 unavailable at Port pin
 133   1         - PWM I/O unavailable at Port pin
 134   1         ***********************************************************************/
 135   1        XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED
 136   1            | XBR2_PWMDE__SINGLE | XBR2_URT1E__DISABLED | XBR2_URT1RTSE__DISABLED
 137   1            | XBR2_URT1CTSE__DISABLED | XBR2_PWME__DISABLED;
 138   1        // [XBR2 - Port I/O Crossbar 2]$
 139   1      
 140   1        // $[PRTDRV - Port Drive Strength]
 141   1        // [PRTDRV - Port Drive Strength]$
 142   1      
 143   1        // $[XBR0 - Port I/O Crossbar 0]
 144   1        /***********************************************************************
 145   1         - UART0 TX0, RX0 routed to Port pins P0.4 and P0.5
 146   1         - SPI I/O unavailable at Port pins
 147   1         - SMBus 0 I/O unavailable at Port pins
 148   1         - CP0 unavailable at Port pin
 149   1         - Asynchronous CP0 unavailable at Port pin
 150   1         - CP1 unavailable at Port pin
 151   1         - Asynchronous CP1 unavailable at Port pin
 152   1         - SYSCLK unavailable at Port pin
 153   1         ***********************************************************************/
 154   1        XBR0 = XBR0_URT0E__ENABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__DISABLED
 155   1            | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED | XBR0_CP1E__DISABLED
 156   1            | XBR0_CP1AE__DISABLED | XBR0_SYSCKE__DISABLED;
 157   1        // [XBR0 - Port I/O Crossbar 0]$
 158   1      
 159   1        // $[XBR1 - Port I/O Crossbar 1]
 160   1        // [XBR1 - Port I/O Crossbar 1]$
 161   1      
 162   1      }
 163          
 164          extern void
 165          CLOCK_0_enter_DefaultMode_from_RESET (void)
 166          {
 167   1        // $[HFOSC0 49 and 49/1.5 MHz Oscillator Setup]
 168   1        // [HFOSC0 49 and 49/1.5 MHz Oscillator Setup]$
 169   1      
 170   1        // $[CLKSEL - Clock Select]
 171   1        /***********************************************************************
 172   1         - Clock derived from the Internal High Frequency Oscillator 24.5 MHz
 173   1         - SYSCLK is equal to selected clock source divided by 1
 174   1         ***********************************************************************/
 175   1        CLKSEL = CLKSEL_CLKSL__HFOSC0_clk24p5 | CLKSEL_CLKDIV__SYSCLK_DIV_1;
 176   1        while ((CLKSEL & CLKSEL_DIVRDY__BMASK) == CLKSEL_DIVRDY__NOT_READY)
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/15/2023 07:18:20 PAGE 4   

 177   1          ;
 178   1        // [CLKSEL - Clock Select]$
 179   1      
 180   1        // $[CLKGRP0 - Clock Group 0]
 181   1        // [CLKGRP0 - Clock Group 0]$
 182   1      
 183   1      }
 184          
 185          extern void
 186          TIMER01_0_enter_DefaultMode_from_RESET (void)
 187          {
 188   1        // $[Timer Initialization]
 189   1        //Save Timer Configuration
 190   1        uint8_t TCON_save;
 191   1        TCON_save = TCON;
 192   1        //Stop Timers
 193   1        TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 194   1      
 195   1        // [Timer Initialization]$
 196   1      
 197   1        // $[TH0 - Timer 0 High Byte]
 198   1        // [TH0 - Timer 0 High Byte]$
 199   1      
 200   1        // $[TL0 - Timer 0 Low Byte]
 201   1        // [TL0 - Timer 0 Low Byte]$
 202   1      
 203   1        // $[TH1 - Timer 1 High Byte]
 204   1        /***********************************************************************
 205   1         - Timer 1 High Byte = 0x96
 206   1         ***********************************************************************/
 207   1        TH1 = (0x96 << TH1_TH1__SHIFT);
 208   1        // [TH1 - Timer 1 High Byte]$
 209   1      
 210   1        // $[TL1 - Timer 1 Low Byte]
 211   1        // [TL1 - Timer 1 Low Byte]$
 212   1      
 213   1        // $[Timer Restoration]
 214   1        //Restore Timer Configuration
 215   1        TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 216   1      
 217   1        // [Timer Restoration]$
 218   1      
 219   1      }
 220          
 221          extern void
 222          TIMER_SETUP_0_enter_DefaultMode_from_RESET (void)
 223          {
 224   1        // $[CKCON0 - Clock Control 0]
 225   1        /***********************************************************************
 226   1         - System clock divided by 12
 227   1         - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 228   1         - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 229   1         - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 230   1         - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 231   1         - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 232   1         - Timer 1 uses the system clock
 233   1         ***********************************************************************/
 234   1        CKCON0 = CKCON0_SCA__SYSCLK_DIV_12 | CKCON0_T0M__PRESCALE
 235   1            | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 236   1            | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 237   1            | CKCON0_T1M__SYSCLK;
 238   1        // [CKCON0 - Clock Control 0]$
 239   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        05/15/2023 07:18:20 PAGE 5   

 240   1        // $[CKCON1 - Clock Control 1]
 241   1        // [CKCON1 - Clock Control 1]$
 242   1      
 243   1        // $[TMOD - Timer 0/1 Mode]
 244   1        /***********************************************************************
 245   1         - Mode 0, 13-bit Counter/Timer
 246   1         - Mode 2, 8-bit Counter/Timer with Auto-Reload
 247   1         - Timer Mode
 248   1         - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 249   1         - Timer Mode
 250   1         - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 251   1         ***********************************************************************/
 252   1        TMOD = TMOD_T0M__MODE0 | TMOD_T1M__MODE2 | TMOD_CT0__TIMER
 253   1            | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 254   1        // [TMOD - Timer 0/1 Mode]$
 255   1      
 256   1        // $[TCON - Timer 0/1 Control]
 257   1        /***********************************************************************
 258   1         - Start Timer 1 running
 259   1         ***********************************************************************/
 260   1        TCON |= TCON_TR1__RUN;
 261   1        // [TCON - Timer 0/1 Control]$
 262   1      
 263   1      }
 264          
 265          extern void
 266          UART_0_enter_DefaultMode_from_RESET (void)
 267          {
 268   1        // $[SCON0 - UART0 Serial Port Control]
 269   1        // [SCON0 - UART0 Serial Port Control]$
 270   1      
 271   1      }
 272          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    157    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
